# See https://fly.io/docs/app-guides/continuous-deployment-with-github-actions/

name: Fly Deploy
on:
  push:
    branches:
      - main
      - develop
  pull_request: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  lint:
    name: ⬣ ESLint
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: 📥 Download deps
        run: bun install

      - name: 🔬 Lint
        run: bun run lint

  prettier:
    name: 🎨 Prettier
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: 📥 Download deps
        run: bun install

      - name: 🎯 Check formatting
        run: bun run prettier --check .

  typecheck:
    name: ʦ TypeScript
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: 📥 Download deps
        run: bun install

      - name: 🔎 Type check
        run: bun run typecheck

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [lint, prettier, typecheck]
    # only build/deploy branches on pushes
    if: ${{ github.event_name == 'push' }}

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.2.0
        id: app_name
        with:
          file: "fly.toml"
          field: "app"

      - name: 🎈 Setup Fly
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: 🚀 Deploy Staging
        if: ${{ github.ref == 'refs/heads/develop' }}
        run: flyctl deploy --remote-only
          --build-arg COMMIT_SHA=${{ github.sha }}
          --build-arg NPM_TOKEN=${{ secrets.NPM_TOKEN }}
          --app ${{ steps.app_name.outputs.value }}-staging
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: 🚀 Deploy Production
        if: ${{ github.ref == 'refs/heads/main' }}
        run: flyctl deploy --remote-only
          --build-arg COMMIT_SHA=${{ github.sha }}
          --build-arg NPM_TOKEN=${{ secrets.NPM_TOKEN }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
